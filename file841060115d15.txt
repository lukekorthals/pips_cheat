---
output: pdf_document
---



# Previous Exams
## 2022
Packages

```r
library(titanic)
library(ggplot2)
library(dplyr)
```

E.R1
What are the names of the first two arguments used by the function median()?

```r
?median
```

E.R2
Define a function named is_tensor() that takes one argument, this function returns true if the input array
has more than 2 dimensions and false if the input array has 2 dimensions or less. The function should also
produce an error that says “Input must be an array” if the input is not an array. You may only use base
R functions.

```r
is_tensor <- function(x) {
  if(!is.array(x)){
    stop("Input must be an array")
  }
  if(sum(x <= 2))  {
    return(FALSE)  }
  else { 
    return(TRUE) 
  }
}
# Tests for all student answers
test_array1 <- array(c(2,4))
is_tensor(test_array1) # FALSE
#> [1] FALSE
test_array2 <- array(1:3, c(2,4,3,4))
is_tensor(test_array2) # TRUE
#> [1] FALSE
not_array <- list()
is_tensor(not_array) # ERROR
#> Error in is_tensor(not_array): Input must be an array
```

E.R3
Using the titanic_train data set from the library titanic, create a function was_there_a that takes one
argument search_term. This function should return a logical value indicating whether there was a male
passenger on the Titanic with the search_term being part of their name. You may only use base R functions.

```r
library(titanic)
was_there_a <- function(search_term) {
  check <- grepl(search_term, titanic_data$Name[titanic_data$Sex == "male"])
  return (sum(check) > 0)
}
# We used these test cases for every answer
was_there_a("Karolina") # FALSE
#> Error in is.factor(x): object 'titanic_data' not found
was_there_a("Owen") # TRUE
#> Error in is.factor(x): object 'titanic_data' not found
was_there_a("Mr") # TRUE, unless students have a special stop function
#> Error in is.factor(x): object 'titanic_data' not found
was_there_a("James") # TRUE
#> Error in is.factor(x): object 'titanic_data' not found
was_there_a("Hippopotamus") # FALSE
#> Error in is.factor(x): object 'titanic_data' not found
```

E.R4
Create a array of size 132 by 5 by 360 with random draws from the standard normal distribution in every
element using rnorm() with default arguments. Now index the 101st to 343rd element of the last dimension
of your array to return 243 matrices within a 3 dimensional array. Do everything without using any loops
and only base R functions.

```r
nfirst <- 132
nsecond <- 5
nthird <- 360
normal_draws <- rnorm(nfirst*nsecond*nthird)
huge_array <- array(normal_draws, dim = c(nfirst, nsecond, nthird))
subset_array <- huge_array[,,c(101:343)]
dim(subset_array)
#> [1] 132   5 243

# Alternate one line
my_subset <- array(rnorm(132*5*360),360)[101:343]
dim(my_subset)
#> [1] 243
```

E.R5
Load the titanic_train data set from the titanic package into your workspace. What is the percentage
of the passengers with a known age was under 30 years old?

```r
df <- titanic::titanic_train
sum(df$Age < 30, na.rm = TRUE) / sum(!is.na(df$Age)) * 100
#> [1] 53.78151
# 53.78151
# This is also full points, the wording of the question does not make it clear what to use in the denom:
sum(df$Age < 30, na.rm = TRUE) / sum(length(df$Age)) * 100
#> [1] 43.09764
# 43.09764```
## Installation
```

E.R6
In terms of R style what are two things wrong with the following code? Rewrite the code to fix the problems
you identified with the R style. You may not use lintr, nor Styler in R Studio.

```r
This line samples 1000 random normal variables and then adds that to 1000 beta
# variables with shape1 = 1 and shape2 = 2 parameters. Then it takes the
# absolute value of that sum. Then it takes the square root of the sum. Then it
# takes the mean of that sum. Then assigns it to the variable "mean_data"
mean_data <- mean(sqrt(abs(rnorm(1000) + rbeta(1000, shape1 = 1, shape2 = 2))))
#> Error: <text>:1:6: unexpected symbol
#> 1: This line
#>          ^
```

E.R7
Using the built-in ChickWeight data set, display the weights of the chickens at time point 21 in a violin plot.
Note that you may (but do not have to) use a function from the ggplot2 library. How many chickens do not
have a value for this time point?

```r
chick_weight  <- ChickWeight

# filter for time point 21
chick21 <- chick_weight  %>% filter(Time == 21)

# Converting Time to factor variable
chick21$Time <- as.factor(chick21$Time)

# Create violin plot
ggplot(chick21, aes(x = Time, y = weight)) + geom_violin() 
```

<img src="man/figures/README-unnamed-chunk-9-1.png" alt="plot of chunk unnamed-chunk-9" width="100%" />

```r
# Full points if x-axis and y-axis are flipped


a <- length(unique(chick_weight$Chick))
b<- length(chick21$Chick)
a-b
#> [1] 5
# 5 missing
```

E.R8
Create the following data.frame without typing out the full vector of any of the columns.
## year people government
## 1 -60 Roman republic
## 2 -40 Roman republic
## 3 -20 Roman empire
## 4 0 Roman empire

```r
year <-seq(-60 , 0, 20)
people <- rep(c("Roman"), 4)
government <- rep(c("republic","empire"), each=2)
data.frame(year,people,government)
#>   year people government
#> 1  -60  Roman   republic
#> 2  -40  Roman   republic
#> 3  -20  Roman     empire
#> 4    0  Roman     empire
```

